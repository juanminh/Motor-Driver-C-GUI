<UserControl x:Class="MotorController.Views.DataView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:Helpers="clr-namespace:MotorController.Helpers"
             mc:Ignorable="d" 
             d:DesignHeight="30" d:DesignWidth="300">
    <UserControl.Resources>
        <Storyboard x:Key="OnMouseEnter1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.9"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Shine">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="Shine">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.995"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Shine">
                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#33F7F5F6"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Shine">
                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#99FFFFFF"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnMouseEnter2">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Shine">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

    </UserControl.Resources>
    <UserControl.RenderTransform>
        <TransformGroup>
            <ScaleTransform/>
            <SkewTransform/>
            <RotateTransform Angle="360"/>
            <TranslateTransform/>
        </TransformGroup>
    </UserControl.RenderTransform>
    <UserControl.LayoutTransform>
        <TransformGroup>
            <ScaleTransform/>
            <SkewTransform/>
            <RotateTransform Angle="360"/>
            <TranslateTransform/>
        </TransformGroup>
    </UserControl.LayoutTransform>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Mouse.MouseEnter">
            <BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave">
            <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
        </EventTrigger>
    </UserControl.Triggers>
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.5*"/>
            <ColumnDefinition Width="0.4*"/>
        </Grid.ColumnDefinitions>
        <Border BorderThickness="1" CornerRadius="4,0,0,4" Grid.Column="0" ><!--Background="#7F000000"-->
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="BorderBrush" Value="Transparent"/><!--#D6D5D5-->
                    <Setter Property="Height" Value="24"/>
                    <Setter Property="Background" Value="#7F000000"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding FontSize}" Value="12"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Height" Value="20"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ReadOnly}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="Transparent"/>
                        </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid >
                <Border x:Name="Glow" BorderThickness="1" CornerRadius="4,0,0,4" Opacity="0">
                    <Border.Background>
                        <RadialGradientBrush RadiusX="1.397" Center="1.012,0.5" GradientOrigin="1.012,0.5" RadiusY="0.68">
                            <GradientStop Color="#B2657FF7"/>
                            <GradientStop Color="#00657FF7" Offset="1"/>
                        </RadialGradientBrush>
                    </Border.Background>
                </Border>
                <Border x:Name="Shine" BorderThickness="1" CornerRadius="4,0,0,4" Opacity="0">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="-0.026,1.005">
                            <GradientStop Color="#99F7F5F6" Offset="0.998"/>
                            <GradientStop Color="#33FFFFFF"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border><!--FFF9F6F6 FFF2553F-->
                <TextBlock Text="{Binding CommandName}" 
                       Foreground="#FFF9F6F6" 
                       HorizontalAlignment="Left"
                       FontSize="{Binding FontSize}" 
                       Focusable="True"
                       Width="Auto" Height="Auto">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{x:Null}">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding FontSize}" Value="12"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Border>
        <Border BorderThickness="1" CornerRadius="0" Grid.Column="1">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="BorderBrush" Value="Transparent"/><!--#D6D5D5-->
                    <Setter Property="Height" Value="23"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ReadOnly}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="BorderBrush" Value="#FF686464"/>
                                <Setter Property="Height" Value="20"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <TextBox x:Name="SetValTB" BorderThickness="0"
                             MaxLines="1"
                             HorizontalContentAlignment="Center"
                             VerticalContentAlignment="Center"
                             FontSize="{Binding FontSize}"
                             Text="{Binding CommandValue, UpdateSourceTrigger=PropertyChanged}" 
                             IsReadOnly="{Binding ReadOnly}"
                             Focusable="True">                             <!--Background="{Binding Background}"-->
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Background" Value="{Binding Background}" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding GetCount_bool}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Foreground" Value="Gray" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ReadOnly}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Focusable" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <i:Interaction.Behaviors>
                    <Helpers:AllowableCharactersTextBoxBehavior RegularExpression="^[0-9.\-]+$" MaxLength="20"/>
                </i:Interaction.Behaviors>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus" >
                        <i:InvokeCommandAction Command="{Binding MouseLeftClickCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="LostFocus" >
                        <i:InvokeCommandAction Command="{Binding ResetValue}" CommandParameter="{Binding ElementName=SetValTB}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseDoubleClick" >
                        <i:InvokeCommandAction Command="{Binding MouseDoubleClick}" CommandParameter="{Binding ElementName=SetValTB}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding SendData}" CommandParameter="{Binding ElementName=SetValTB}"></KeyBinding>
                    <KeyBinding Key="Esc"  Command="{Binding ResetValue}" CommandParameter="{Binding ElementName=SetValTB}"></KeyBinding>
                </TextBox.InputBindings>
            </TextBox>
        </Border>
    </Grid>
</UserControl>
