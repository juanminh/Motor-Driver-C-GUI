<Application
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:views="clr-namespace:MotorController.Views"
    xmlns:borders="clr-namespace:ToggleSwitch.Borders;assembly=ToggleSwitch"
    xmlns:utils="clr-namespace:ToggleSwitch.Utils;assembly=ToggleSwitch"
    xmlns:ToggleSwitch="clr-namespace:ToggleSwitch;assembly=ToggleSwitch"
    xmlns:helpers="clr-namespace:MotorController.Helpers"
    mc:Ignorable="d"
	x:Class="MotorController.App"
	StartupUri="MainWindow.xaml">
    <Application.Resources>
		<!-- Resources scoped at the Application level should be defined here.
        C:\Projects\Motor Driver C# GUI\MotorController MotorController\packages\ToggleSwitch.1.1.2\lib\net40-client\ToggleSwitch.dll-->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/Dictionary1.xaml" />
                <ResourceDictionary Source="Styles/ResourceDictionary1.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <DataTemplate x:Key="OscilloscopeViewModel">
                <views:OscilloscopeView></views:OscilloscopeView>
            </DataTemplate>
            <DataTemplate x:Key="EnumViewModel">
                <views:EnumView></views:EnumView>
            </DataTemplate>
            <DataTemplate x:Key="DataViewModel">
                <views:DataView></views:DataView>
            </DataTemplate>
            <DataTemplate x:Key="BoolViewIndModel">
                <views:BoolViewInd></views:BoolViewInd>
            </DataTemplate>
            <DataTemplate x:Key="DebugObjModel">
                <views:DebugObj></views:DebugObj>
            </DataTemplate>
            <DataTemplate x:Key="UpDownControlModel">
                <views:UpDownControl></views:UpDownControl>
            </DataTemplate>
            <DataTemplate x:Key="CalibrationWizardViewModel">
                <views:UC_CalibrationWizard></views:UC_CalibrationWizard>
            </DataTemplate>
            <DataTemplate x:Key="UC_ToggleSwitchViewModel">
                <views:UC_ToggleSwitch></views:UC_ToggleSwitch>
            </DataTemplate>
            <DataTemplate x:Key="UC_ChannelViewModel">
                <views:UC_Channel></views:UC_Channel>
            </DataTemplate>

            <Style x:Key="RectangleStyle1" TargetType="{x:Type Rectangle}"/>
            <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="OnChecking">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="29.125"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFC5F7B7"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF257E29"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="OnUnchecking">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-0.875"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                        <SplineThicknessKeyFrame KeyTime="00:00:00.3000000" Value="1,1,1,1"/>
                                    </ThicknessAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="slider">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.04"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF1666EA"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB7D0FD"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>

                            <DockPanel x:Name="dockPanel" Margin="0,0,0.25,0">
                                <Label  Content="Status" VerticalAlignment="Center" Foreground="White" HorizontalAlignment="Left" Margin="0"/>
                                <Grid Margin="5,0,0,0" Width="53.875" Background="{x:Null}" HorizontalAlignment="Right">
                                    <TextBlock Text="ON" TextWrapping="Wrap" FontWeight="Bold" FontSize="12" HorizontalAlignment="Right" Margin="0,0,2,0" Foreground="#FFF9F9F9" VerticalAlignment="Center"/>
                                    <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="0" FontSize="12" FontWeight="Bold" Text="OFF" TextWrapping="Wrap" Foreground="White" VerticalAlignment="Center"/>
                                    <Border HorizontalAlignment="Left" x:Name="slider" Width="24" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" RenderTransformOrigin="0.5,0.5" Margin="0,1">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                <GradientStop Color="#FF88888F" Offset="0.957"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF8AB4FF" Offset="1"/>
                                                <GradientStop Color="#FFD1E2FF" Offset="0"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </DockPanel>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CheckBoxStyle2" TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="OnChecking">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="29.125"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFC5F7B7"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF257E29"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="OnUnchecking">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-0.875"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                        <SplineThicknessKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                    </ThicknessAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="slider">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.04"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF1666EA"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB7D0FD"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>

                            <DockPanel x:Name="dockPanel" Margin="0,0,0,0">
                                <!--<Label VerticalAlignment="Center" Foreground="White" HorizontalAlignment="Left" Margin="0">
                                    <Setter Property="Content" Value="hello"/>
                                </Label>-->
                                <Grid Margin="5,0,0,0" Width="53.875" Background="{x:Null}" HorizontalAlignment="Right">
                                    <TextBlock Text="I" TextWrapping="Wrap" FontWeight="Bold" FontSize="12" HorizontalAlignment="Right" Margin="0,0,15,0" Foreground="#FFF9F9F9" VerticalAlignment="Center"/>
                                    <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="15,0,0,0" FontSize="12" FontWeight="Bold" Text="O" TextWrapping="Wrap" Foreground="White" VerticalAlignment="Center"/>
                                    <Border HorizontalAlignment="Left" x:Name="slider" Width="24" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" RenderTransformOrigin="0.5,0.5" Margin="1,1">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                <GradientStop Color="#FF88888F" Offset="0.957"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF8AB4FF" Offset="1"/>
                                                <GradientStop Color="#FFD1E2FF" Offset="0"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </DockPanel>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CheckBoxStyle3" TargetType="{x:Type CheckBox}" >
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="OnChecking">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="29.125"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFC5F7B7"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF257E29"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="OnUnchecking">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-0.875"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                        <SplineThicknessKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                    </ThicknessAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="slider">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.04"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF1666EA"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB7D0FD"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <DockPanel x:Name="dockPanel" Margin="0">
                                <Grid Margin="0,0,0,0" Width="54" Background="{x:Null}" HorizontalAlignment="Right">
                                    <TextBlock Text="Int" FontWeight="Normal" FontSize="11" HorizontalAlignment="Right" Margin="0,0,7,0" Foreground="#FFF9F9F9" VerticalAlignment="Center"/>
                                    <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="0,0,0,0" FontSize="11" FontWeight="Normal" Text="Float" Foreground="White" VerticalAlignment="Center"/>
                                    <Border HorizontalAlignment="Left" x:Name="slider" Width="28" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" RenderTransformOrigin="0,1" Margin="0">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                <GradientStop Color="#FF88888F" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#FF8AB4FF" Offset="1"/>
                                                <GradientStop Color="#FFD1E2FF" Offset="0"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </DockPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ActionButton" TargetType="{x:Type Button}">
            <Border x:Name="border1" BorderBrush="#FFFFFFFF" BorderThickness="1.2" CornerRadius="4,4,4,4" Background="{x:Null}" Opacity="0.8" OpacityMask="Black" Width="70" Height="70">
                <Border x:Name="border" Background="#7F060606" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.507*"/>
                            <RowDefinition Height="0.493*"/>
                        </Grid.RowDefinitions>
                        <Image x:Name="image" Margin="0" Grid.Row="0" Source="Properties/alt-parameters-icone-9469-64.png" Stretch="Fill" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Height="64" Width="64" Opacity="1"/>
                    	<Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0">
                    		<Border.Background>
                    			<LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                    				<GradientStop Color="#99FFFFFF" Offset="0"/>
                    				<GradientStop Color="#33FFFFFF" Offset="1"/>
                    			</LinearGradientBrush>
                    		</Border.Background>
                    	</Border>
                    </Grid>
                </Border>
            </Border>
            <ControlTemplate.Triggers>
        			<EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
        			<Trigger Property="IsPressed" Value="True">
        				<Setter Property="Opacity" TargetName="shine" Value="0.4"/>
        				<Setter Property="Background" TargetName="border" Value="#CC000000"/>
        			</Trigger>
        			<Trigger Property="IsMouseOver" Value="True"/>
        		</ControlTemplate.Triggers>
        </ControlTemplate>
        	<Style x:Key="MotorOnCheckBoxStyle" TargetType="{x:Type CheckBox}">
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type CheckBox}">
        					<ControlTemplate.Resources>
        						<Storyboard x:Key="OnChecking">
        							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
        								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="29.125"/>
        							</DoubleAnimationUsingKeyFrames>
        							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="slider">
        								<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFC5F7B7"/>
        							</ColorAnimationUsingKeyFrames>
        							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="slider">
        								<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF257E29"/>
        							</ColorAnimationUsingKeyFrames>
        						</Storyboard>
        						<Storyboard x:Key="OnUnchecking">
        							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
        								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-0.875"/>
        							</DoubleAnimationUsingKeyFrames>
        							<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(FrameworkElement.Margin)">
        								<SplineThicknessKeyFrame KeyTime="00:00:00.3000000" Value="1,1,1,1"/>
        							</ThicknessAnimationUsingKeyFrames>
        							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="slider">
        								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.04"/>
        							</DoubleAnimationUsingKeyFrames>
        							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="slider">
        								<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF1666EA"/>
        							</ColorAnimationUsingKeyFrames>
        							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="slider">
        								<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB7D0FD"/>
        							</ColorAnimationUsingKeyFrames>
        						</Storyboard>
        					</ControlTemplate.Resources>

        					<DockPanel x:Name="dockPanel" Margin="0,0,0.25,0">
        						<Label  Content="Status" VerticalAlignment="Center" Foreground="White" HorizontalAlignment="Left" Margin="0"/>
        						<Grid Margin="5,0,0,0" Width="53.875" Background="{x:Null}" HorizontalAlignment="Right">
        							<TextBlock Text="ON" TextWrapping="Wrap" FontWeight="Bold" FontSize="12" HorizontalAlignment="Right" Margin="0,0,2,0" Foreground="#FFF9F9F9" VerticalAlignment="Center"/>
        							<TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="0" FontSize="12" FontWeight="Bold" Text="OFF" TextWrapping="Wrap" Foreground="White" VerticalAlignment="Center"/>
        							<Border HorizontalAlignment="Left" x:Name="slider" Width="24" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" RenderTransformOrigin="0.5,0.5" Margin="0,1">
        								<Border.RenderTransform>
        									<TransformGroup>
        										<ScaleTransform ScaleX="1" ScaleY="1"/>
        										<SkewTransform AngleX="0" AngleY="0"/>
        										<RotateTransform Angle="0"/>
        										<TranslateTransform X="0" Y="0"/>
        									</TransformGroup>
        								</Border.RenderTransform>
        								<Border.BorderBrush>
        									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        										<GradientStop Color="#FFFFFFFF" Offset="0"/>
        										<GradientStop Color="#FF88888F" Offset="0.957"/>
        									</LinearGradientBrush>
        								</Border.BorderBrush>
        								<Border.Background>
        									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        										<GradientStop Color="#FF8AB4FF" Offset="1"/>
        										<GradientStop Color="#FFD1E2FF" Offset="0"/>
        									</LinearGradientBrush>
        								</Border.Background>
        							</Border>
        						</Grid>
        					</DockPanel>

        					<ControlTemplate.Triggers>
        						<Trigger Property="IsChecked" Value="True">
        							<Trigger.ExitActions>
        								<BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
        							</Trigger.ExitActions>
        							<Trigger.EnterActions>
        								<BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
        							</Trigger.EnterActions>
        						</Trigger>
        						<Trigger Property="IsEnabled" Value="False">
        							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
            <ControlTemplate x:Key="ThumbControlTemplateMotorOn" TargetType="{x:Type Thumb}">
                <Grid Background="Transparent">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.25" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unfocused"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Unchecked"/>
                            <VisualState x:Name="Checked">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="-1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="path"/>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <borders:OuterGlowBorder BorderThickness="0" Background="Transparent" CornerRadius="1" OuterGlowColor="Black" OuterGlowSize="4" OuterGlowOpacity="0.15" ShadowCornerRadius="8">
                        <Grid>
                            <borders:ClippingBorder x:Name="Background" Background="White" CornerRadius="0.5" BorderBrush="#FFE2DDDD" BorderThickness="0.3" ClipContent="False">
                                <borders:ClippingBorder.Effect>
                                    <DropShadowEffect Color="#FF488D54" Direction="350" ShadowDepth="38"/>
                                </borders:ClippingBorder.Effect>
                                <Border BorderBrush="#FFEBEBEB" BorderThickness="1" CornerRadius="1" Background="#FF150E0E" Opacity="0.9">
                                    <Path x:Name="path" Data="M3.6,2.6L10,2.6 10,6.6 3.6,6.6z M10,0L15.5,4.6 10,9.4z" Fill="#AAFBFBFB" Margin="7,5" RenderTransformOrigin="0.5,0.5" Stretch="Fill" StrokeThickness="0">
                                        <Path.RenderTransform>
                                            <ScaleTransform/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Border>
                            </borders:ClippingBorder>
                            <borders:ClippingBorder x:Name="BackgroundAnimation" BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}" Background="Black" CornerRadius="0.5" Opacity="0" d:IsHidden="True"/>
                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="True" Margin="1" Opacity="0" RadiusY="4" RadiusX="4" StrokeThickness="1" d:IsHidden="True"/>
                            <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="False" Opacity="0" RadiusY="4" RadiusX="4" d:IsHidden="True"/>
                        </Grid>
                    </borders:OuterGlowBorder>
                </Grid>
            </ControlTemplate>
            <Style x:Key="FocusVisualStyleMotorON" TargetType="{x:Type Control}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control}">
                            <Grid Visibility="Collapsed"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="imageListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <ContentPresenter x:Name="contentPresenter"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="toolbarButtonTextStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="12" />
            </Style>
            <SolidColorBrush x:Key="listItemBorderBrush" Color="#FF616161" />
            <Style x:Key="groupsListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="Padding" Value="3" />
                <Setter Property="Margin" Value="3"/>
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Background" Value="#BB222222" />
                <Setter Property="Opacity" Value="1.0" />
                <Setter Property="BorderBrush" Value="{StaticResource listItemBorderBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">

                            <Border Margin="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="contentPresenter"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".55" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="Selected" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>

  